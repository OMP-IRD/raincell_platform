version: "3.7"

volumes:
  postgresql_data:
#  django_static_files:

secrets:
  pg_postgres_password:
    file: secrets-dev/pg_postgres_password.txt
  django_env:
    file: secrets-dev/django_env.txt
  django_superuser_password:
    file: secrets-dev/django_superuser_password.txt

services:
  database:
    image: pigeosolutions/raincell_postgis:latest
    build:
      context: ./raincell_database
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=raincell
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_postgres_password
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    secrets:
      - pg_postgres_password
    networks:
      - internal

  backend:
    image: pigeosolutions/raincell_backend:latest
    restart: always
    build: ./raincell_backend
#    command: ["sleep","10000"]
#    ports:
#      - 8000:8000
    expose:
      - 8000
    environment:
      - DJANGO_ENV_FILE=/run/secrets/django_env
      - DJANGO_SUPERUSER_PASSWORD_FILE=/run/secrets/django_superuser_password
      - STATIC_ROOT=/static/
      # Needed by wait-for-db:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
#    volumes:
#      - django_static_files:/static
    secrets:
      - django_env
      - django_superuser_password
    networks:
      - internal

  # This service is a fake one, it is only used for the build phase:
  # since pramsey did not push to dockerhub his alpine version
  # we need to build it locally, then we can use it as base image to build
  # our own image, pigeosolutions/pg_tileserv:latest
  pg-tileserv-base:
    image: pramsey/pg_tileserv:latest-alpine
    entrypoint: ["echo","Used only for build phase. Shutting down now"]
    restart: "no"
    build:
      context: ./pg_tileserv
      dockerfile: Dockerfile.alpine

  pg-tileserv:
    image: pigeosolutions/pg_tileserv:latest
    restart: always
    build:
      context: ./pg_tileserv/pigeosolutions
      dockerfile: Dockerfile.alpine.pigeo
    entrypoint: [ "/wait-for-db.sh" ]
    depends_on:
      - database
      - pg-tileserv-base
    env_file:
      - secrets-dev/pg_tileserv.env
    environment:
      - TS_BASEPATH=/tiles/
#    ports:
#      - 7800:7800
    expose:
      - 7800
    networks:
      - internal

  pg-featureserv:
    image: pramsey/pg_featureserv:latest
#    entrypoint: [ "/wait-for-db.sh" ]
    depends_on:
      - database
    env_file:
      - secrets-dev/pg_tileserv.env
    environment:
      - PGFS_SERVER_BASEPATH=/features/
      - PGFS_DATABASE_DBTIMEOUT=20
      - PGFS_DATABASE_DBPOOLMAXCONNS=8
      - PGFS_DATABASE_DEBUG=true
      - PGFS_PAGING_LIMITMAX=10000
#    ports:
#      - 9000:9000
    expose:
      - 9000
    networks:
      - internal

  varnish:
    image: varnish:stable
    volumes:
      - "./config/varnish/default.vcl:/etc/varnish/default.vcl"
#    ports:
#      - "80:80"
    tmpfs:
      - /var/lib/varnish:exec
    environment:
      - VARNISH_SIZE=50MB
    #    command: "-p default_keep=300"
    depends_on:
      - pg-tileserv
      - pg-featureserv
      - backend
    networks:
      - internal

networks:
  internal:
